<?xml version="1.0" encoding="utf-8"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">

  <xacro:macro name="create_components"
    params="components_config_path use_gpu simulation_engine namespace">

    <xacro:unless value="${components_config_path == 'None'}">
      <xacro:property name="components_config"
        value="${xacro.load_yaml(components_config_path)}" />
      <xacro:load_componenet
        config="${components_config}"
        counter="${len(components_config['components'])}"
        use_gpu="${use_gpu}"
        simulation_engine="${simulation_engine}"
        robot_namespace="${namespace}" />

    </xacro:unless>
  </xacro:macro>

  <xacro:macro name="load_componenet"
    params="config counter use_gpu simulation_engine robot_namespace">
    <xacro:if value="${counter}">
      <xacro:property name="index" value="${counter - 1}" scope="parent" />
      <xacro:property name="component" value="${config['components'][index]}" scope="parent" />

      <xacro:property name="type" value="${component['type']}" scope="parent" />
      <xacro:property name="parent_link" value="${component['parent_link']}" scope="parent" />
      <xacro:property name="xyz" value="${component['xyz']}" scope="parent" />
      <xacro:property name="rpy" value="${component['rpy']}" scope="parent" />
      <xacro:property name="tf_prefix" value="${component['tf_prefix']}" scope="parent" />
      <xacro:property name="device_namespace" value="${component['namespace']}" scope="parent" />

      <xacro:if value="${device_namespace == 'None' and robot_namespace == 'None'}">
        <xacro:property name="fixed_namespace" value="None" scope="parent" />
      </xacro:if>
      <xacro:unless value="${device_namespace == 'None' and robot_namespace == 'None'}">
        <xacro:property name="fixed_namespace" value="/${robot_namespace + device_namespace}"
          scope="parent" />
      </xacro:unless>

      <xacro:if value="${device_namespace == 'None' and robot_namespace != 'None'}">
        <xacro:property name="fixed_namespace" value="${robot_namespace}" scope="parent" />
      </xacro:if>
      <xacro:if value="${device_namespace != 'None' and robot_namespace == 'None'}">
        <xacro:property name="fixed_namespace" value="${device_namespace}" scope="parent" />
      </xacro:if>


      <xacro:if value="${type == 'CAM01'}">
        <xacro:property name="camera_name" value="${component['name']}" scope="parent" />
        <xacro:include
          filename="$(find ros_components_description)/urdf/orbbec_astra.urdf.xacro"
          ns="camera" />

        <xacro:camera.orbbec_astra
          parent_link="${parent_link}"
          xyz="${xyz}"
          rpy="${rpy}"
          tf_prefix="${tf_prefix}"
          camera_name="${camera_name}"
          simulation_engine="${simulation_engine}"
          namespace="${fixed_namespace}"
        />
      </xacro:if>

      <xacro:if value="${type == 'LDR01'}">
        <xacro:include
          filename="$(find ros_components_description)/urdf/slamtec_rplidar_s1.urdf.xacro"
          ns="lidar"
        />

        <xacro:lidar.slamtec_rplidar_s1
          parent_link="${parent_link}"
          xyz="${xyz}"
          rpy="${rpy}"
          tf_prefix="${tf_prefix}"
          use_gpu="${use_gpu}"
          simulation_engine="${simulation_engine}"
          namespace="${fixed_namespace}"
        />
      </xacro:if>

      <xacro:if value="${type == 'LDR06'}">
        <xacro:include
          filename="$(find ros_components_description)/urdf/slamtec_rplidar_s3.urdf.xacro"
          ns="lidar"
        />

        <xacro:lidar.slamtec_rplidar_s3
          parent_link="${parent_link}"
          xyz="${xyz}"
          rpy="${rpy}"
          tf_prefix="${tf_prefix}"
          use_gpu="${use_gpu}"
          simulation_engine="${simulation_engine}"
          namespace="${fixed_namespace}"
        />
      </xacro:if>

      <xacro:if value="${type == 'LDR13'}">
        <xacro:include
          filename="$(find ros_components_description)/urdf/ouster_os1_32.urdf.xacro"
          ns="lidar"
        />

        <xacro:lidar.ouster_os1_32
          parent_link="${parent_link}"
          xyz="${xyz}"
          rpy="${rpy}"
          tf_prefix="${tf_prefix}"
          use_gpu="${use_gpu}"
          simulation_engine="${simulation_engine}"
          namespace="${fixed_namespace}"
        />
      </xacro:if>

      <xacro:if value="${type == 'LDR20'}">
        <xacro:include
          filename="$(find ros_components_description)/urdf/velodyne_puck.urdf.xacro"
          ns="lidar"
        />

        <xacro:lidar.velodyne_puck
          parent_link="${parent_link}"
          xyz="${xyz}"
          rpy="${rpy}"
          tf_prefix="${tf_prefix}"
          use_gpu="${use_gpu}"
          simulation_engine="${simulation_engine}"
          namespace="${fixed_namespace}"
        />
      </xacro:if>

      <xacro:if value="${type == 'MAN01'}">
        <xacro:include
          filename="$(find ros_components_description)/urdf/ur.urdf.xacro"
          ns="manipulator"
        />

        <xacro:manipulator.ur
          parent_link="${parent_link}"
          xyz="${xyz}"
          rpy="${rpy}"
          tf_prefix="${tf_prefix}"
          ur_type="ur3e"
        />
      </xacro:if>

      <xacro:if value="${type == 'MAN02'}">
        <xacro:include
          filename="$(find ros_components_description)/urdf/ur.urdf.xacro"
          ns="manipulator"
        />

        <xacro:manipulator.ur
          parent_link="${parent_link}"
          xyz="${xyz}"
          rpy="${rpy}"
          tf_prefix="${tf_prefix}"
          ur_type="ur5e"
        />
      </xacro:if>


      <xacro:if value="${type == 'MAN04'}">
        <xacro:include
          filename="$(find ros_components_description)/urdf/kinova.urdf.xacro"
          ns="manipulator"
        />

        <xacro:manipulator.kinova
          parent_link="${parent_link}"
          xyz="${xyz}"
          rpy="${rpy}"
          tf_prefix="${tf_prefix}"
          kinova_type="gen3"
          dof="6"
          gripper="robotiq_2f_85"
          vision="false"
        />
      </xacro:if>

      <xacro:if value="${type == 'MAN05'}">
        <xacro:include
          filename="$(find ros_components_description)/urdf/kinova.urdf.xacro"
          ns="manipulator"
        />

        <xacro:manipulator.kinova
          parent_link="${parent_link}"
          xyz="${xyz}"
          rpy="${rpy}"
          tf_prefix="${tf_prefix}"
          kinova_type="gen3"
          dof="6"
          gripper="robotiq_2f_85"
          vision="true"
        />
      </xacro:if>


      <xacro:if value="${type == 'MAN06'}">
        <xacro:include
          filename="$(find ros_components_description)/urdf/kinova.urdf.xacro"
          ns="manipulator"
        />

        <xacro:manipulator.kinova
          parent_link="${parent_link}"
          xyz="${xyz}"
          rpy="${rpy}"
          tf_prefix="${tf_prefix}"
          kinova_type="gen3"
          dof="7"
          gripper="robotiq_2f_85"
          vision="false"
        />
      </xacro:if>

      <xacro:if value="${type == 'MAN07'}">
        <xacro:include
          filename="$(find ros_components_description)/urdf/kinova.urdf.xacro"
          ns="manipulator"
        />

        <xacro:manipulator.kinova
          parent_link="${parent_link}"
          xyz="${xyz}"
          rpy="${rpy}"
          tf_prefix="${tf_prefix}"
          kinova_type="gen3"
          dof="7"
          gripper="robotiq_2f_85"
          vision="true"
          namespace="${fixed_namespace}"
        />
      </xacro:if>

      <xacro:if value="${type == 'GRP02'}">
        <xacro:include filename="$(find robotiq_description)/urdf/robotiq_2f_85_macro.urdf.xacro"
          ns="gripper" />

        <xacro:gripper.robotiq_gripper name="${tf_prefix}robotiq_2f_85"
          prefix="${tf_prefix}"
          parent="${parent_link}"
          use_fake_hardware="false"
          sim_ignition="true"
        >
          <origin xyz="${xyz}" rpy="${rpy}" />
        </xacro:gripper.robotiq_gripper>
      </xacro:if>

      <xacro:if value="${type == 'GRP03'}">
        <xacro:include filename="$(find robotiq_description)/urdf/robotiq_2f_140_macro.urdf.xacro"
          ns="gripper" />

        <xacro:gripper.robotiq_gripper name="${tf_prefix}robotiq_2f_140"
          prefix="${tf_prefix}"
          parent="${parent_link}"
          use_fake_hardware="false"
          sim_ignition="true"
        >
          <origin xyz="${xyz}" rpy="${rpy}" />
        </xacro:gripper.robotiq_gripper>
      </xacro:if>

      <xacro:if value="${index}">
        <xacro:load_componenet
          counter="${index}"
          config="${config}"
          use_gpu="${use_gpu}"
          simulation_engine="${simulation_engine}"
          robot_namespace="${robot_namespace}"
        />
      </xacro:if>
    </xacro:if>
  </xacro:macro>
</robot>
